drop table if exists films,filme_genres,genres,mpa,users,friends,film_liks,friendship_status, directors, film_director;

CREATE table IF NOT EXISTS films (
  id integer generated by default as identity primary key,
  name varchar(50) NOT NULL,
  description varchar(200) NOT NULL,
  release_date DATE,
  duration integer,
  rate integer,
  mpa integer
);

CREATE table IF NOT EXISTS filme_genres (
  film_id integer,
  genre_id integer,
  PRIMARY KEY (film_id, genre_id)
);

CREATE table IF NOT EXISTS genres (
  id integer generated by default as identity primary key,
  name varchar(20)
);

CREATE table IF NOT EXISTS mpa (
  id integer generated by default as identity primary key,
  name varchar(10)
);

CREATE table IF NOT EXISTS users (
  id integer generated by default as identity primary key,
  email varchar(50) UNIQUE NOT NULL,
  login varchar(20) UNIQUE NOT NULL,
  name varchar(20) NOT NULL,
  birthday DATE
);

CREATE TABLE IF NOT EXISTS friends (
  user_id integer,
  friend_id integer,
  PRIMARY KEY (user_id, friend_id)
);

CREATE table IF NOT EXISTS film_liks (
  id_user integer,
  id_film integer,
  PRIMARY KEY (id_user, id_film)
);


ALTER TABLE filme_genres ADD FOREIGN KEY (film_id) REFERENCES films (id);

ALTER TABLE films ADD FOREIGN KEY (mpa) REFERENCES mpa (id);

ALTER TABLE friends ADD FOREIGN KEY (friend_id) REFERENCES users (id);

ALTER TABLE friends ADD FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE film_liks ADD FOREIGN KEY (id_film) REFERENCES films (id);

ALTER TABLE film_liks ADD FOREIGN KEY (id_user) REFERENCES users (id);

ALTER TABLE filme_genres ADD FOREIGN KEY (genre_id) REFERENCES genres (id);

CREATE TABLE IF NOT EXISTS directors (
  id integer generated by default as identity primary key,
  name varchar(100) NOT NULL
);

CREATE TABLE IF NOT EXISTS film_director (
  film_id integer,
  director_id integer,
  PRIMARY KEY (film_id, director_id),
  FOREIGN KEY (film_id) REFERENCES films (id),
  FOREIGN KEY (director_id) REFERENCES directors (id)
);
